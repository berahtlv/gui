# Main application layout

#:kivy 1.0

#:include kv/popups.kv

#:import load_equipment gnpy.core.equipment.load_equipment

# workaround: Template can't use ids
#:set sidebar_width 60
#:set sidebar_padding 5
#:set menubar_height 30
#:set toolbar_height 33
#:set toolbar_padding 3


MainWindow:

<MainWindow>:
    orientation: 'vertical'

    Menubar:
        id: menubar
        orientation: 'horizontal'
        size_hint: 1, None
        height: menubar_height

        canvas.before:
            Color:
                rgba: app.colortheme
            Rectangle:
                pos: self.pos
                size: self.size

        # Here are MenubarDropDown objects

    Toolbar:
        id: toolbar
        orientation: 'horizontal'
        size_hint: 1, None
        padding: toolbar_padding
        spacing: 10
        height: toolbar_height

        canvas.before:
            Color:
                rgba: app.colortheme
            Rectangle:
                pos: self.pos
                size: self.size

        # Here are ToolbarIcon objects

    BoxLayout:
        orientation: 'horizontal'

        Sidebar:
            id: sidebar
            orientation: 'vertical'
            size_hint: None, 1
            padding: sidebar_padding
            spacing: sidebar_padding
            width: sidebar_width

            canvas.before:
                Color:
                    rgba: app.colortheme
                Rectangle:
                    pos: self.pos
                    size: self.size

            # Here are SidebarIcon objects

        BoxLayout:
            orientation: 'vertical'

            ScrollView:
                effect_cls: 'ScrollEffect'
                bar_margin: 1
                bar_width: 10
                scroll_type: ['bars']
                scroll_distance: 20
                scroll_timeout: 200

                TopologyMap:
                    id: topomap
                    size_hint: None, None
                    size: 1280, 720

                    canvas.before:
                        Color:
                            rgb: 1, 1, 1
                        Rectangle:
                            pos: 0, 0
                            size: self.size

                    # Here are TopomapIcon and TopomapConnect objects

            Splitter:
                size_hint: 1, None
                sizable_from: 'top'
                max_size: 300
                min_size: 0
                strip_size: 8

                TabbedPanel:
                    id: tabspanel
                    do_default_tab: False
                    tab_height: 20
                    tab_width: 100

                    TabbedPanelItem:
                        id: basictab
                        text: 'Basic Info'

                        BasicTabContent:
                            id: basictabcontent
                            # Here is list of parameters

                    TabbedPanelItem:
                        id: paramtab
                        text: 'Parameters'

                        # Here is ParamTabContent

    Statusbar:
        id: statusbar
        orientation: 'horizontal'
        size_hint: 1, None
        height: 20

        canvas.before:
            Color:
                rgba: app.colortheme
            Rectangle:
                pos: self.pos
                size: self.size

        Label:
            text: 'Some state'

<SidebarIcon>:
    group: 'elements'
    allow_strech: True
    size_hint: None, None
    height: sidebar_width - 2 * sidebar_padding
    width: sidebar_width - 2 * sidebar_padding

<TopomapIcon>:
    id: topoicon
    allow_strech: True
    size_hint: None, None
    size: self.el_side, self.el_side
    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 30000
    drag_distance: 10

    Label:
        size: self.texture_size
        x: topoicon.x
        y: topoicon.y - 20
        color: 0, 0, 0, 1
        font_size: 13
        italic: True
        text: topoicon.el_id

        canvas.before:
            Color:
                rgb: 1, 1, 1
            Rectangle:
                pos: self.pos
                size: self.texture_size

<TopomapConnect>:
    size_hint: None, None

    canvas:
        Color:
            rgba: self.conn_color
        Line:
            width: 3
            points: self.conn_points

<MenubarMenu>:
    size_hint: None, 1
    width: 100
    background_normal: ''
    background_color: app.colortheme

<MenuButton>:
    size_hint: 1, None
    height: 20
    background_normal: ''
    background_color: 0.4, 0.4, 0.4, 1

<MenuDropDown>:
    canvas.before:
        Color:
            rgb: 0.4, 0.4, 0.4
        Rectangle:
            size: self.size
            pos: self.pos

<ToolbarIcon>:
    allow_strech: True
    size_hint: None, None
    height: toolbar_height - 2 * toolbar_padding
    width: toolbar_height - 2 * toolbar_padding

<PLabel@Label>:
    font_size: 14

<PTInput@TextInput>:
    multiline: False
    font_size: 14
    on_text: self.parent._update_el(self.param, self.input_filter, self.readonly, self.text)

<PSpinner@Spinner>:
    sync_height: True

<RoadmTabContent>:
    col: 2
    rows: 1
    size_hint: None, None
    size: 350, self.rows * 29

    PLabel:
        text: 'Loss, dB'
    PTInput:
        input_filter: 'float'
        param: 'loss'

<FusedTabContent>:
    col: 2
    rows: 1
    size_hint: None, None
    size: 350, self.rows * 29

    PLabel:
        text: 'Loss, dB'
    PTInput:
        input_filter: 'float'
        param: 'loss'

<TrxTabContent>:
    col: 2
    rows: 5
    size_hint: None, None
    size: 300, self.rows * 29
    type_varieties: load_equipment(app.json_path + 'eqpt_config.json')['Transceiver']

    PLabel:
        text: 'Transceiver Type'
    PSpinner:
        id: trx_type
        text: '-- select --'
        values: ('-- select --',) + tuple(root.type_varieties.keys())
        param: 'type_variety'
        on_text:
            root._update_format(self.text, trx_format, root.type_varieties)
            root._update_el(self.param, None, False, self.text)

    PLabel:
        text: 'Format'
    PSpinner:
        id: trx_format
        text: '-- select --'
        values: ('-- select --',)
        param: 'format'
        on_text:
            root._update_eqpt(trx_type.text, self.text, trx_baudrate, trx_osnr, trx_bitrate)
            root._update_el(self.param, None, False, self.text)

    PLabel:
        text: 'Baudrate, Gbaud'
    PTInput:
        id: trx_baudrate
        param: 'baudrate'
        readonly: True

    PLabel:
        text: 'OSNR, dB/0.1nm'
    PTInput:
        id: trx_osnr
        param: 'OSNR'
        readonly: True

    PLabel:
        text: 'Bitrate, Gbps'
    PTInput:
        id: trx_bitrate
        param: 'bit_rate'
        readonly: True

<FiberTabContent>:
    col: 4
    rows: 3
    size_hint: None, None
    size: 650, self.rows * 29
    type_varieties: load_equipment(app.json_path + 'eqpt_config.json')['Fiber']

    PLabel:
        text: 'Length, km'
    PTInput:
        input_filter: 'float'
        param: 'length'

    PLabel:
        text: 'Fiber Type'
    PSpinner:
        text: '-- select --'
        values: ('-- select --',) + tuple(root.type_varieties.keys())
        param: 'type_variety'
        on_text:
            root._update_eqpt(self.text, fiber_disp, fiber_gamma)
            root._update_el(self.param, None, False, self.text)

    PLabel:
        text: 'Loss, dB/km'
    PTInput:
        input_filter: 'float'
        param: 'loss_coef'

    PLabel:
        text: 'Dispersion, ps/nm/km'
    PTInput:
        id: fiber_disp
        param: 'dispersion'
        readonly: True

    # empty space
    Widget:
    Widget:

    PLabel:
        text: 'Gamma'
    PTInput:
        id: fiber_gamma
        param: 'gamma'
        readonly: True

<EdfaTabContent>:
    col: 4
    rows: 4
    size_hint: None, None
    size: 650, self.rows * 29
    type_varieties: load_equipment(app.json_path + 'eqpt_config.json')['Edfa']

    PLabel:
        text: 'Gain target, dB'
    PTInput:
        input_filter: 'float'
        param: 'gain_target'

    PLabel:
        text: 'EDFA Type'
    PSpinner:
        text: '-- select --'
        values: ('-- select --',) + tuple(root.type_varieties.keys())
        param: 'type_variety'
        on_text:
            root._update_eqpt(self.text, edfa_gmin, edfa_gmax, edfa_pmax)
            root._update_el(self.param, None, False, self.text)

    PLabel:
        text: 'Tilt target'
    PTInput:
        input_filter: 'float'
        param: 'tilt_target'

    PLabel:
        text: 'Gain max, dB'
    PTInput:
        id: edfa_gmax
        input_filter: 'float'
        param: 'gain_flatmax'
        readonly: True

    # empty space
    Widget:
    Widget:

    PLabel:
        text: 'Gain min, dB'
    PTInput:
        id: edfa_gmin
        input_filter: 'float'
        param: 'gain_min'
        readonly: True

    # empty space
    Widget:
    Widget:

    PLabel:
        text: 'Max output, dBm'
    PTInput:
        id: edfa_pmax
        input_filter: 'float'
        param: 'p_max'
        readonly: True

<BasicTabContent>:
    col: 2
    rows: 5
    size_hint: None, None
    size: 350, self.rows * 29

    PLabel:
        text: 'Element ID'
    PTInput:
        param: 'el_id'

    PLabel:
        text: 'Site name'
    PTInput:
        param: 'el_site'

    PLabel:
        text: 'Region'
    PTInput:
        param: 'el_region'

    PLabel:
        text: 'Latitude'
    PTInput:
        input_filter: 'float'
        param: 'el_latitude'

    PLabel:
        text: 'Longitude'
    PTInput:
        input_filter: 'float'
        param: 'el_longitude'
